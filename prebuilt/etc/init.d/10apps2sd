#!/system/bin/sh
# Make sure the Apps2SD structure exists.
# Originates from the cyanogenmod team 
# Revised by Andrew Sutherland for The Evervolv Project (20120223)

if [ "$SD_EXT_DIRECTORY" = "" ]; then
    SD_EXT_DIRECTORY=/data/sdext2;
fi;
bb="/system/xbin/busybox";
logI="log -p i -t apps2sd";

# make sure $SD_EXT_DIRECTORY is actually mounted
if ! awk -vDIR="$SD_EXT_DIRECTORY" '$2 == DIR { exit 1; }' /proc/mounts ; then
    # if a2sd flag present we can continue
    if [ -f $SD_EXT_DIRECTORY/.a2sd ]; then
        for ii in app app-private data; do
            # dont move data unless user opted for it.
            if [[ "$ii" == "data" && ! -f $SD_EXT_DIRECTORY/.ad2sd ]]; then
                $logI "AD2SD flag not set...not moving appdata";
                continue;
            fi;
            # create directories if necessary.
            if [ ! -d $SD_EXT_DIRECTORY/$ii ]; then
                $bb mkdir $SD_EXT_DIRECTORY/$ii;
                $bb chown 1000:1000 $SD_EXT_DIRECTORY/$ii;
                $bb chmod 771 $SD_EXT_DIRECTORY/$ii;
                $logI "Created directory $SD_EXT_DIRECTORY/$ii";
            fi;
            # backwards compat for older a2sd
            if [ -h /data/$ii ]; then
                $bb rm -rf /data/$ii;
                $bb mkdir /data/$ii;
                $bb chown 1000:1000 /data/$ii;
                $bb chmod 771 /data/$ii;
                $logI "Symlink /data/$ii removed";
            fi;
            # move apks
            appfiles=`$bb ls /data/$ii | $bb wc -l`;
            if [ $appfiles -gt 0 ]; then
                $logI "Copying apks in /data/$ii to $SD_EXT_DIRECTORY/$ii";
                $bb cp -a /data/$ii/* $SD_EXT_DIRECTORY/$ii/;
                $logI "Copied $appfiles from /data/$ii"
            fi;
            # delete the apks
            if [ $appfiles -gt 0 ]; then
                $logI "Removing apks in /data/$ii to free up space";
                $bb rm -rf /data/$ii/*
            fi;
            # and finally bind mount
            $logI "Bind mounting $SD_EXT_DIRECTORY/$ii on /data/$ii";
            $bb mount -o bind $SD_EXT_DIRECTORY/$ii /data/$ii;
        done;
        $logI "A2SD successfully activated";
    else
        $logI "A2SD flag not set";
        # Nuke data leaving this will likely cause issues
        if [ -d $SD_EXT_DIRECTORY/data ]; then
            $bb rm -rf $SD_EXT_DIRECTORY/data
        fi
    fi;
    # end a2sd
    # Setup dalvik-cache
    if [ -f $SD_EXT_DIRECTORY/.dc2sd ]; then
        # create directory if needed
        if [ ! -d $SD_EXT_DIRECTORY/dalvik-cache ]; then
            $bb mkdir $SD_EXT_DIRECTORY/dalvik-cache;
            $bb chown 1000:1000 $SD_EXT_DIRECTORY/dalvik-cache;
            $bb chmod 771 $SD_EXT_DIRECTORY/dalvik-cache;
            $logI "$SD_EXT_DIRECTORY/dalvik-cache created";
        fi;
        dcfiles=`$bb ls /data/dalvik-cache | $bb wc -l`
        if [ $dcfiles -gt 0 ]; then
            $logI "Nuking /data/dalvik-cache to free up space";
            $bb rm -rf /data/dalvik-cache/*
        fi;
        # this is how i am dealing with wipes
        # if you just wiped obviously this flag wont be there so we know we should also
        # clean the dalvik-cache folder on the sdcard so it can be rebuilt properly
        if [ ! -f /data/.dc2sd ]; then
            $logI "This is a first boot...nuking $SD_EXT_DIRECTORY/dalvik-cache";
            $bb rm -rf $SD_EXT_DIRECTORY/dalvik-cache/*;
            $bb echo "x" > /data/.dc2sd;
        fi;
        $logI "Bind mounting $SD_EXT_DIRECTORY/dalvik-cache to /data/dalvik-cache";
        $bb mount -o bind $SD_EXT_DIRECTORY/dalvik-cache /data/dalvik-cache;
        $logI "Finished setting up dalvik-cache on $SD_EXT_DIRECTORY";
    else
        $logI "DC2SD flag not set";
        # remove since its not being used
        if [ -d $SD_EXT_DIRECTORY/dalvik-cache ]; then
            $logI "Removing $SD_EXT_DIRECTORY/dalvik-cache";
            $bb rm -rf $SD_EXT_DIRECTORY/dalvik-cache;
        fi;
    fi;
    #end dalvik-cache
    #experimental xdata
    if [ -f $SD_EXT_DIRECTORY/.xdata ]; then
        # create directory if needed
        if [ ! -d $SD_EXT_DIRECTORY/xdata ]; then
            $bb mkdir $SD_EXT_DIRECTORY/xdata;
            $bb chown 1000:1000 $SD_EXT_DIRECTORY/xdata;
            $bb chmod 771 $SD_EXT_DIRECTORY/xdata;
            $logI "$SD_EXT_DIRECTORY/xdata created";
        fi;
        # move files
        if [ ! -f $SD_EXT_DIRECTORY/xdata/.nocp ]; then
            $logI "Wiping $SD_EXT_DIRECTORY/xdata";
            $bb rm -rf $SD_EXT_DIRECTORY/xdata/*;
            $bb echo "x" > $SD_EXT_DIRECTORY/xdata/.nocp;
            $logI "Cloning /data to $SD_EXT_DIRECTORY/xdata";
            $bb cp -a /data/* $SD_EXT_DIRECTORY/xdata/;
            #$bb rm -r /data/*;
        fi;
        # dont mess with the old a2sd dirs just copy the apks into the new one
        for ll in app app-private data; do
            if [ -d $SD_EXT_DIRECTORY/$ll ]; then
                if [ ! -f $SD_EXT_DIRECTORY/xdata/$ll/.nocp ]; then
                    numfiles=`$bb ls $SD_EXT_DIRECTORY/$ll | $bb wc -l`;
                    if [ $numfiles -gt 0 ]; then
                        $bb cp -a $SD_EXT_DIRECTORY/$ll/* $SD_EXT_DIRECTORY/xdata/$ll/;
                        $logI "Copied $numfiles apks from $SD_EXT_DIRECTORY/$ll to $SD_EXT_DIRECTORY/xdata/$ll";
                        echo "$numfiles" > $SD_EXT_DIRECTORY/xdata/$ll/.nocp;
                    fi;
                fi;
            fi;
        done;
        # bind mount the xdata directory to the expected data directory
        $logI "Bind mounting $SD_EXT_DIRECTORY/xdata/ to /data";
        $bb mount -o bind $SD_EXT_DIRECTORY/xdata /data;
        $logI "Done setting up experimental xdata";
    else
        $logI "XDATA flag not set";
    fi;
    #end experimental xdata
    #setprops needed by a2sd script
    setprop a2sd.mountpoint `$bb cat /proc/mounts | $bb grep "$SD_EXT_DIRECTORY" | $bb awk '/^\// {print $1;exit;}'`
    setprop ev.filesystem.ready 1;
else
    $logI "$SD_EXT_DIRECTORY not mounted...nothing to do";
    setprop a2sd.mountpoint "none";
    setprop ev.filesystem.ready 0;
fi;
